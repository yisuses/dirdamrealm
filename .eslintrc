{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "ignorePatterns": ["**/node_modules", "**/dist", "**/build"],
  "extends": [
    "plugin:import/recommended",
    "plugin:import/typescript",
    "eslint:recommended",
    "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:prettier/recommended", // Enables eslint-plugin-prettier and displays prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
    "plugin:@typescript-eslint/recommended" // Uses the recommended rules from @typescript-eslint/eslint-plugin
  ],
  "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true // Allows for the parsing of JSX
    },
    "ecmaVersion": 12, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "project": "./tsconfig.json"
  },
  "plugins": ["jest", "react", "@typescript-eslint"],
  "rules": {
    "react/jsx-uses-react": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index", "object"],
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "variable",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": ["function"],
        "format": ["camelCase"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "class",
        "format": ["PascalCase"]
      },
      {
        "selector": "classProperty",
        "format": ["camelCase"]
      },
      {
        "selector": "objectLiteralProperty",
        "format": [
          "camelCase",
          // Some external libraries use snake_case for params
          "snake_case",
          // Env variables are generally uppercase
          "UPPER_CASE"
        ]
      },
      {
        "selector": ["typeAlias", "interface"],
        "format": ["PascalCase"]
      },
      {
        "selector": ["typeProperty"],
        "format": ["camelCase"]
      },
      {
        "selector": ["typeParameter"],
        "format": ["PascalCase"]
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
    }
  },
  "overrides": [
    {
      "files": ["*.js"],
      "rules": {
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "sonarjs/no-duplicate-string": "off",
        "sonarjs/no-all-duplicated-branches": "off",
        "@typescript-eslint/consistent-type-exports": "off",
        "@typescript-eslint/consistent-type-imports": "off",
        "import/order": "off"
      }
    },
    {
      "files": ["packages/**/*.test.{ts,tsx}", "tests.tsx"],
      "rules": {
        "react/display-name": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@ts-ignore": "off"
      }
    }
  ]
}
